<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.peizhiwei.community.admin.dao.HouseOwnerDao">
 	<!-- 分页查询所有业主信息 -->
 	<select id="pagegetallhouseownerinfo" resultType="com.peizhiwei.community.admin.entity.HouseOwner">
 		SELECT house_owner.*,building_info.build_number as `buildingInfo.buildNumber`,house_info.house_number as `houseInfo.houseNumber`,house_info.house_unit as `houseInfo.houseUnit`,house_info.house_state as `houseInfo.houseState`,house_info.house_id as `houseInfo.houseId`
		FROM house_owner 
		left join house_info on house_owner.house_id=house_info.house_id
		left join building_info on house_info.build_id=building_info.build_id
		limit #{page},#{size}
 	</select>
 	<select id="count" resultType="long">
		select count(1) from house_owner
	</select>
 	<!-- 查询所有业主信息 -->
 	<select id="getallhouseownerinfo" resultType="com.peizhiwei.community.admin.entity.HouseOwner">
 		SELECT house_owner.*,building_info.build_number as `buildingInfo.buildNumber`,house_info.house_number as `houseInfo.houseNumber`,house_info.house_unit as `houseInfo.houseUnit`,house_info.house_state as `houseInfo.houseState`,house_info.house_id as `houseInfo.houseId`
		FROM house_owner 
		left join house_info on house_owner.house_id=house_info.house_id
		left join building_info on house_info.build_id=building_info.build_id
 	</select>
 	<!-- 更新业主信息 -->
 	<update id="updatehouseownerinfo" parameterType="com.peizhiwei.community.admin.entity.HouseOwner">
 		UPDATE house_owner
		set owner_name=#{ownerName},owner_sex=#{ownerSex},owner_phone=#{ownerPhone},owner_birthday=#{ownerBirthday},owner_id_card=#{ownerIdCard},
		owner_native_place=#{ownerNativePlace},owner_work_place=#{ownerWorkPlace}
		where owner_id=#{ownerId}
 	</update>
 	<!-- 查询所有还有空房间的楼栋编号 -->
 	<select id="getallhavenullhousebuildNumber" resultType="String">
 		SELECT build_number FROM building_info b
		LEFT JOIN house_info i on i.build_id = b.build_id
		WHERE house_state=0
		GROUP BY i.build_id HAVING COUNT(*)>=1
		ORDER BY build_number
 	</select>
 	<!-- 根据楼栋编号，查询该楼栋中还有空房间的单元 -->
 	<select id="getallhavenullhousehouseunit" parameterType="String" resultType="int">
 		SELECT house_unit FROM house_info i
		LEFT JOIN building_info b on i.build_id = b.build_id
		WHERE house_state=0 AND build_number=#{buildNumber}
		GROUP BY house_unit HAVING COUNT(*)>0
		ORDER BY house_unit
 	</select>
 	<!-- 根据楼栋编号，单元号查询所有空房间的房间号 -->
 	<select id="getallnullhousehousenumber" resultType="String">
 		SELECT house_number FROM house_info i
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE house_state=0 AND build_number= #{buildNumber} AND house_unit=#{houseUnit}
		ORDER BY house_id,house_number
 	</select>
 	<!-- 根据楼栋编号，单元号，房间号，查询该房间是否有人居住 -->
	<select id="checkhouseisnull" resultType="int">
		SELECT house_state FROM house_info i
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number=#{buildNumber} AND house_unit=#{houseUnit} AND house_number=#{houseNumber}
	</select>
 	<!-- 新增业主信息 -->
 	<insert id="inserthouseownerinfo" parameterType="com.peizhiwei.community.admin.entity.HouseOwner" useGeneratedKeys="true" keyProperty="ownerId">
 		INSERT INTO house_owner(owner_phone,owner_password,owner_name,owner_birthday,
 		owner_id_card,owner_work_place,owner_native_place,owner_sex,house_id) 
		VALUES(#{ownerPhone},#{ownerPassword},#{ownerName},#{ownerBirthday},
		#{ownerIdCard},#{ownerWorkPlace},#{ownerNativePlace},#{ownerSex},#{houseInfo.houseId})
 	</insert>
 	<!-- 获取所有业主名称，去掉重复的 -->
 	<select id="getallonlyhouseownername" resultType="String">
 		SELECT DISTINCT owner_name FROM house_owner
 	</select>
 	<!-- 业主迁出 -->
 	<delete id="deleteowner" parameterType="int">
 		delete from house_owner where owner_id=#{ownerId} 
 	</delete>
 	<!-- 模糊查询业主信息（楼栋号，单元号，房间号，业主姓名，联系方式） -->
 	<select id="gethouseownerinfolike" resultType="com.peizhiwei.community.admin.entity.HouseOwner">
 		SELECT house_owner.*,building_info.build_number as `buildingInfo.buildNumber`,house_info.house_number as `houseInfo.houseNumber`,house_info.house_unit as `houseInfo.houseUnit`,house_info.house_state as `houseInfo.houseState`,house_info.house_id as `houseInfo.houseId`
		FROM house_owner 
		left join house_info on house_owner.house_id=house_info.house_id
		left join building_info on house_info.build_id=building_info.build_id
		WHERE build_number LIKE #{buildNumber} AND house_unit LIKE #{houseUnit} AND house_number LIKE #{houseNumber} 
		AND owner_name LIKE #{ownerName} AND owner_phone LIKE #{ownerPhone}
		limit #{params.page},#{params.size}
 	</select>
 	<!-- 模糊查询的总记录数 -->
	<select id="likecount" resultType="long">
		SELECT count(1)
		FROM house_owner 
		left join house_info on house_owner.house_id=house_info.house_id
		left join building_info on house_info.build_id=building_info.build_id
		WHERE build_number LIKE #{buildNumber} AND house_unit LIKE #{houseUnit} AND house_number LIKE #{houseNumber} 
		AND owner_name LIKE #{ownerName} AND owner_phone LIKE #{ownerPhone}
	</select>
 </mapper>