<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peizhiwei.community.admin.dao.FamilyDao">
	<!-- 查询所有家庭成员信息 -->
	<select id="getallfamilyinfo" resultType="com.peizhiwei.community.admin.entity.Family">
		SELECT f.*,o.owner_name as `houseOwner.ownerName`,i.house_number as `houseOwner.houseInfo.houseNumber`,
		build_number as `houseOwner.houseInfo.buildInfo.buildNumber`,house_unit as `houseOwner.houseInfo.houseUnit`
		FROM family f
		LEFT JOIN house_owner o ON f.owner_id=o.owner_id
		LEFT JOIN house_info i ON i.house_id=o.house_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
	</select>
	<!-- 更改家庭成员信息 -->
	<update id="updatefamilyinfo" parameterType="com.peizhiwei.community.admin.entity.Family">
		UPDATE family
		set family_name=#{familyName},family_sex=#{familySex},family_phone=#{familyPhone},family_birthday=#{familyBirthday},family_relation=#{familyRelation},
		family_native_place=#{familyNativePlace},family_work_place=#{familyWorkPlace}
		where family_id=#{familyId}
	</update>
	<!-- 新增家庭成员 -->
	<insert id="insertfamilyinfo" parameterType="com.peizhiwei.community.admin.entity.Family">
		INSERT INTO family(family_name,family_sex,family_native_place,family_phone,family_work_place,family_relation,family_birthday,owner_id) 
		VALUES(#{familyName},#{familySex},#{familyNativePlace},#{familyPhone},#{familyWorkPlace},#{familyRelation},#{familyBirthday},#{houseOwner.ownerId})
	</insert>
	<!-- 删除家庭成员信息 -->
	<delete id="deletefamilyinfo" parameterType="int">
		delete from family where family_id=#{familyId} 
	</delete>
	<!-- 业主迁出时删除家庭成员信息 -->
	<delete id="deletefamilyofowner" parameterType="int">
		delete from family
		where owner_id=#{ownerId}
	</delete>
	<!-- 查询所有有住户的楼栋信息，去掉重复的 -->
	<select id="gethaveownerbuildnumber" resultType="String">
		SELECT DISTINCT build_number FROM building_info b
		LEFT JOIN house_info i ON i.build_id=b.build_id
		WHERE house_state=1
	</select>
	<!-- 根据楼栋编号查询该栋楼中有住户的单元号 -->
	<select id="gethaveownerhouseunitaccordingbuildnumber" resultType="int">
		SELECT DISTINCT house_unit FROM house_info i
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number=#{buildNumber} AND house_state=1
	</select>
	<!-- 根据楼栋编号，单元号，查询该栋楼中所有有住户的房间号 -->
	<select id="gethaveownerhousenumber" resultType="String">
		SELECT house_number FROM house_info i
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number=#{buildNumber} AND house_unit=#{houseUnit} AND house_state=1
	</select>
	<!-- 根据楼栋编号，单元号，房间号，查询业主名 -->
	<select id="getownername" resultType="String">
		SELECT owner_name FROM house_owner o
		LEFT JOIN house_info i ON i.house_id=o.house_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number=#{buildNumber} AND house_unit=#{houseUnit} AND house_number=#{houseNumber}
	</select>
	<!-- 根据楼栋编号，单元号，房间编号，查询业主id -->
	<select id="selectowneridaccording_bn_hu_hn" resultType="int">
		SELECT o.owner_id FROM house_owner o
		LEFT JOIN house_info i ON i.house_id=o.house_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number=#{buildNumber} AND house_unit=#{houseUnit} AND house_number=#{houseNumber}
	</select>
	<!-- 模糊查询家庭成员信息（楼栋编号，单元号，房间号，业主姓名，成员姓名） -->
	<select id="getfamilyinfolike" resultType="com.peizhiwei.community.admin.entity.Family">
		SELECT f.*,o.owner_name as `houseOwner.ownerName`,i.house_number as `houseOwner.houseInfo.houseNumber`,
		build_number as `houseOwner.houseInfo.buildInfo.buildNumber`,house_unit as `houseOwner.houseInfo.houseUnit`
		FROM family f
		LEFT JOIN house_owner o ON f.owner_id=o.owner_id
		LEFT JOIN house_info i ON i.house_id=o.house_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE build_number LIKE #{buildNumber} AND house_unit LIKE #{houseUnit} AND house_number LIKE #{houseNumber} AND owner_name LIKE #{ownerName} AND family_name LIKE #{familyName}
	</select>
	<!-- 批量删除家庭成员信息 -->
	<delete id="checkdelete">
		delete from family where family_id in
		<foreach collection="array" item="familyId" open="(" separator="," close=")">
			#{familyId}
		</foreach>
	</delete>
</mapper>