<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peizhiwei.community.admin.dao.ParkingDao">
	<!-- 分页查询所有停车位信息 -->
	<select id="pagegetallparkinginfo" resultType="com.peizhiwei.community.admin.entity.Parking">
		select p.*,o.owner_name as `houseOwner.ownerName`,o.owner_phone as `houseOwner.ownerPhone`,build_number as `houseOwner.houseInfo.buildInfo.buildNumber`,house_unit as `houseOwner.houseInfo.houseUnit`,i.house_number as `houseOwner.houseInfo.houseNumber`
		from parking p
		left join house_owner o on p.owner_id=o.owner_id
		left join house_info i on i.owner_id=o.owner_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		limit #{page},#{size}
	</select>
	<select id="count" resultType="long">
		select count(1) from parking
	</select>
	<!-- 获取所有停车位信息 -->
	<select id="getallparkinginfo" resultType="com.peizhiwei.community.admin.entity.Parking">
		select p.*,o.owner_name as `houseOwner.ownerName`,o.owner_phone as `houseOwner.ownerPhone`,build_number as `houseOwner.houseInfo.buildInfo.buildNumber`,house_unit as `houseOwner.houseInfo.houseUnit`,i.house_number as `houseOwner.houseInfo.houseNumber`
		from parking p
		left join house_owner o on p.owner_id=o.owner_id
		left join house_info i on i.owner_id=o.owner_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
	</select>
	<!-- 查询当前停车位编号最大的一个 -->
	<select id="getparkinginfomaxparkingnumber" resultType="String">
		SELECT MAX(parking_number) FROM parking
	</select>
	<!-- 调整停车位价格 -->
	<update id="updateparkingprice" parameterType="com.peizhiwei.community.admin.entity.Parking">
		update parking
		set parking_price=#{parkingPrice}
		where parking_id=#{parkingId}
	</update>
	<!-- 出售停车位，更新该停车位信息 -->
	<update id="sellupdateparkinginfo" parameterType="com.peizhiwei.community.admin.entity.Parking">
		UPDATE parking
		set owner_id=#{houseOwner.ownerId},parking_sell_time=#{parkingSellTime},parking_price=#{parkingPrice},parking_state=1
		where parking_id=#{parkingId}
	</update>
	<!-- 收回停车位 -->
	<update id="takebackupdateparkinginfo" parameterType="com.peizhiwei.community.admin.entity.Parking">
		UPDATE parking
		set owner_id=null,parking_sell_time=null,parking_state=0
		where parking_id=#{parkingId}
	</update>
	<!-- 根据业主id收回该业主的车位 -->
	<update id="takebackownerofparking" parameterType="int">
		UPDATE parking
		SET `owner_id` = null, `parking_state` = 0, `parking_sell_time` = null
		WHERE owner_id=#{ownerId}
	</update>
	<!-- 批量增加停车位信息 -->
	<insert id="insertparkinginfo" parameterType="com.peizhiwei.community.admin.entity.Parking">
		insert into parking(
    		parking_number,parking_price
   		)
    	values
    	<foreach collection="parkinglist" item="item" index="index" separator=",">
      	(
      		#{item.parkingNumber},#{item.parkingPrice}
      	)
    	</foreach>
	</insert>
	<!-- 分页模糊查询停车位信息，(车位号，业主名，楼栋号，单元号，房间号) -->
	<select id="getparkinginfolike" resultType="com.peizhiwei.community.admin.entity.Parking">
		select p.*,o.owner_name as `houseOwner.ownerName`,o.owner_phone as `houseOwner.ownerPhone`,build_number as `houseOwner.houseInfo.buildInfo.buildNumber`,house_unit as `houseOwner.houseInfo.houseUnit`,i.house_number as `houseOwner.houseInfo.houseNumber`
		from parking p
		left join house_owner o on p.owner_id=o.owner_id
		left join house_info i on i.owner_id=o.owner_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE parking_number LIKE #{parkingNumber} AND IFNULL(owner_name,'') LIKE #{ownerName} AND IFNULL(build_number,'') LIKE #{buildNumber} AND IFNULL(house_unit,'') LIKE #{houseUnit} AND IFNULL(house_number,'') LIKE #{houseNumber}
		limit #{params.page},#{params.size}
	</select>
	<!-- 模糊查询的总记录数 -->
	<select id="likecount" resultType="long">
		SELECT count(1)
		from parking p
		left join house_owner o on p.owner_id=o.owner_id
		left join house_info i on i.owner_id=o.owner_id
		LEFT JOIN building_info b ON b.build_id=i.build_id
		WHERE parking_number LIKE #{parkingNumber} AND IFNULL(owner_name,'') LIKE #{ownerName} AND IFNULL(build_number,'') LIKE #{buildNumber} AND IFNULL(house_unit,'') LIKE #{houseUnit} AND IFNULL(house_number,'') LIKE #{houseNumber}
	</select>
</mapper>